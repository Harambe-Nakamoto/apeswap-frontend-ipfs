name: Release
on:
  push:
    branches:
      - test-main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  # create_release:
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs: bump_version
  #   if: ${{ needs.bump_version.outputs.new_tag != null }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Set up node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
  #         registry-url: https://registry.npmjs.org

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Build the IPFS bundle
  #       run: yarn build

  #     - name: Pin to Crust
  #       uses: crustio/ipfs-crust-action@v2.0.3
  #       continue-on-error: true
  #       timeout-minutes: 2
  #       with:
  #         cid: ${{ steps.upload.outputs.hash }}
  #         seeds: ${{ secrets.CRUST_SEEDS }}

  #     - name: Create GitHub Release
  #       id: create_release
  #       uses: actions/create-release@v1.1.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ needs.bump_version.outputs.new_tag }}
  #         release_name: Release ${{ needs.bump_version.outputs.new_tag }}
  #         body: |
  #           IPFS hash of the deployment:
  #           - CIDv0: `${{ steps.upload.outputs.hash }}`
  #           - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`

  #           The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [app.uniswap.org](https://app.uniswap.org).

  #           You can also access the Uniswap Interface directly from an IPFS gateway.
  #           **BEWARE**: The Uniswap interface uses [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) to remember your settings, such as which tokens you have imported.
  #           **You should always use an IPFS gateway that enforces origin separation**, or our alias to the latest release at [app.uniswap.org](https://app.uniswap.org).
  #           Your Uniswap settings are never remembered across different URLs.

  #           IPFS gateways:
  #           - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
  #           - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
  #           - [ipfs://${{ steps.upload.outputs.hash }}/](ipfs://${{ steps.upload.outputs.hash }}/)

  #           ${{ needs.bump_version.outputs.changelog }}
